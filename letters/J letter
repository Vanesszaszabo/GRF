
///////////////////////////////////
// square.cpp
//
// OpenGL program to draw a square.
// 
// Sumanta Guha.
///////////////////////////////////
#define _USE_MATH_DEFINES

#include <cmath>
#include <GL/glew.h>
#include <GL/freeglut.h> 

static float N = 40.0;
static float X = 400.0;
static float Y = 400.0;
static float t = 2.0;
static float ortho = 3.0;

// Drawing routine.
void drawScene(void)
{
	float angle;
	float i;
	glClear(GL_COLOR_BUFFER_BIT);

	glColor3f(1.0, 0.0, 0.0);

	glRotatef(-45.0, 0.0, 0.0, 1.0);
	// Draw a polygon with specified vertices.
	glBegin(GL_POLYGON);
	glVertex3f(0.0, 20.0, 0.0);
	glVertex3f(50.0, 20.0, 0.0);
	glVertex3f(50.0, 30.0, 0.0);
	glVertex3f(0.0, 30.0, 0.0);
	glEnd();

	glPushMatrix();
	glTranslatef(0.0, -60.0, 0.0);
	glBegin(GL_TRIANGLE_STRIP);
	glRotatef(-90.0, 1.0, 0.0, 0.0);

	for (i = 0; i <= N; i++) {
		angle = -4.75 + 1.1 * M_PI * i / N;
		glVertex3f(50 - cos(angle) * 10.0, 70 - sin(angle) * 10.0, 0.0);
		glVertex3f(50 - cos(angle) * 20.0, 70 - sin(angle) * 20.0, 0.0);
	}
	glEnd();
	glPopMatrix();

	glFlush();
}

// Initialization routine.
void setup(void)
{
	glClearColor(1.0, 1.0, 1.0, 0.0);
}

// OpenGL window reshape routine.
void resize(int w, int h)
{
	glViewport(0, 0, w, h);

	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	glOrtho(-20.0, 80, -100.0, 100, -1.0, 1.0);
	//glOrtho(-ortho, ortho, -ortho, ortho, -1.0, 1.0);

	glMatrixMode(GL_MODELVIEW);
	glLoadIdentity();
}

// Keyboard input processing routine.
void keyInput(unsigned char key, int x, int y)
{
	switch (key)
	{
	case 27:
		exit(0);
		break;
	default:
		break;
	}
}

// Main routine.
int main(int argc, char** argv)
{
	glutInit(&argc, argv);
	glutInitContextVersion(4, 3);
	glutInitContextProfile(GLUT_COMPATIBILITY_PROFILE);

	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGBA);
	glutInitWindowSize(X, Y);
	glutInitWindowPosition(100, 100);
	glutCreateWindow("square.cpp");
	glutDisplayFunc(drawScene);
	glutReshapeFunc(resize);
	glutKeyboardFunc(keyInput);

	glewExperimental = GL_TRUE;
	glewInit();

	setup();

	glutMainLoop();
}
